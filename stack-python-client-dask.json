{"version":2,"kind":"Notebook","sha256":"af1af1743f5c9b0501cd04dc536e7303f3f47972e110c129da6370ed31d1cd18","slug":"stack-python-client-dask","location":"/STACK/STACK-Python-Client-Dask.ipynb","dependencies":[],"frontmatter":{"title":"STACK service - Python Client Dask","content_includes_title":true,"kernelspec":{"name":"python_dedl","display_name":"Python DEDL","language":"python"},"numbering":{"title":{"offset":2}},"thumbnail":"/build/b27bd30f978ddf0848f3ea0942070886.jpeg","exports":[{"format":"ipynb","filename":"STACK-Python-Client-Dask.ipynb","url":"/build/STACK-Python-Client--3391767cc139f7e8b9f3cfc7cc50489f.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"image","url":"/build/b27bd30f978ddf0848f3ea0942070886.jpeg","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QdCBPSrJJK","urlSource":"https://github.com/destination-earth/DestinE-DataLake-Lab/blob/main/img/DestinE-banner.jpg?raw=true"}],"key":"I8vz1i3aXO"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Licence","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ugyoAEpCou"}],"key":"Wf33WDN4cy"},{"type":"text","value":": MIT ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YGu3SYnoeb"},{"type":"break","key":"i8rKRhm581"}],"key":"vyzNhglOBw"},{"type":"image","url":"/build/2b00998ddd74a039529882b6d26ca076.svg","alt":"Dask logo","key":"EA3sJU2Dk7","urlSource":"https://docs.dask.org/en/latest/_images/dask_horizontal.svg"},{"type":"heading","depth":1,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"STACK service - Python Client Dask","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"lWAWWa154t"}],"identifier":"stack-service-python-client-dask","label":"STACK service - Python Client Dask","html_id":"stack-service-python-client-dask","implicit":true,"key":"clO5298Qkt"},{"type":"heading","depth":1,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Multi-cloud processing with Dask","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"KBUrCwOilb"}],"identifier":"multi-cloud-processing-with-dask","label":"Multi-cloud processing with Dask","html_id":"multi-cloud-processing-with-dask","implicit":true,"key":"njOprdd0w3"},{"type":"div","class":"alert-info","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"Overview","key":"rXR0Yi2dx1"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"gFAa66lYpG"},{"type":"heading","depth":4,"children":[{"type":"text","value":"Content","key":"uRJQ5iAKZm"}],"identifier":"content","label":"Content","html_id":"content","implicit":true,"key":"k2bdOaKfg5"},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"DestinE Data Lake (DEDL) Stack Client","key":"sG4pYv8fqg"}],"key":"MRK3cOOis5"}],"key":"IHq2KFtwcK"},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Making use of clients context manager","key":"lwFtKqDQSL"}],"key":"j0xvPDFfwE"}],"key":"bft8E6xZbj"},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use Case: Pakistan Flood 2022","key":"Ys5iEaIWKJ"}],"key":"M6RnACAFJZ"}],"key":"YFFKnGcJsV"},{"type":"heading","depth":4,"children":[{"type":"text","value":"Duration: 15 min.","key":"Pi24Oc4HtX"}],"identifier":"duration-15-min","label":"Duration: 15 min.","html_id":"duration-15-min","implicit":true,"key":"zKwLZPTwtS"}],"key":"fbKfZflyPA"},{"type":"break","key":"fetjBmcjPh"},{"type":"div","class":"alert-warning","children":[{"type":"text","value":"Please make sure Python DEDL kernel is used.","key":"HZeZXrwjfY"}],"key":"e9s2SaUcyt"},{"type":"paragraph","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"DestinE Data Lake utilises a deployment of ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"Hhj4H1aeB8"},{"type":"link","url":"https://gateway.dask.org/","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Dask Gateway","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"DnpMYfCPta"}],"urlSource":"https://gateway.dask.org/","key":"KWzQ9zV4jT"},{"type":"text","value":" on each location (bridge) in the data lake. Dask Gateway provides a secure, multi-tenant server for managing Dask clusters. It allows users to launch and use Dask clusters in a shared, centrally managed cluster environment, without requiring users to have direct access to the underlying cluster backend (e.g. Kubernetes, Hadoop/YARN, HPC Job queues, etc…).","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"gg1XHNFyBn"}],"key":"bwswO9HTVJ"},{"type":"paragraph","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Dask Gateway exposes a REST API to spawn clusters on demand. The overall architecture of Dask Gateway is depicted hereafter.","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"QNwhIBFd4J"}],"key":"PcgOhHVKDC"},{"type":"image","url":"/build/01f61b2ebec9f77ff63c7f40d6a20edc.png","key":"dkDqgRH73U","urlSource":"https://github.com/destination-earth/DestinE-DataLake-Lab/blob/main/STACK/img/DEDL_Dask_multicloud.png?raw=true"},{"type":"heading","depth":2,"position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"DEDL Dask Gateway","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"MFO2XcTJBG"}],"identifier":"dedl-dask-gateway","label":"DEDL Dask Gateway","html_id":"dedl-dask-gateway","implicit":true,"key":"ZbtBWSBfBr"},{"type":"paragraph","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"strong","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"Central Site","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"vRkv8G1CrP"}],"key":"OQHBKV9X5k"}],"key":"nrvrgJ5iKa"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":30,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"address: ","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"aQUpvD47PY"},{"type":"link","url":"http://dask.central.data.destination-earth.eu","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"http://​dask​.central​.data​.destination​-earth​.eu","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"oLlZCgcRU2"}],"urlSource":"http://dask.central.data.destination-earth.eu","key":"X2D3havHuU"}],"key":"WZxgioDvBd"},{"type":"listItem","spread":true,"position":{"start":{"line":31,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"proxy_address: tcp://dask.central.data.destination-earth.eu:80","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"dmyCOcrqo7"}],"key":"xJw3uRC9to"}],"key":"xqJN2SLMc9"},{"type":"paragraph","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"strong","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"LUMI Bridge","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"SMAGn6t8ND"}],"key":"qNGVCST0sF"}],"key":"dDnhcaQIgB"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":34,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"address: ","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"RciAbQv8DX"},{"type":"link","url":"http://dask.lumi.data.destination-earth.eu","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"http://​dask​.lumi​.data​.destination​-earth​.eu","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"KHGdtzftpm"}],"urlSource":"http://dask.lumi.data.destination-earth.eu","key":"r26KXlWLAr"}],"key":"je36GaKTp5"},{"type":"listItem","spread":true,"position":{"start":{"line":35,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"proxy_address: tcp://dask.lumi.data.destination-earth.eu:80","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"SOQpw1aRrC"}],"key":"aSLxhx0hwX"}],"key":"A1wqGCClPq"},{"type":"paragraph","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"Only authenticated access is granted to the DEDL STACK service Dask, therefore a helper class to authenticate a user against the DESP identity management system is implemented. The users password is directly handed over to the request object and is not permanently stored.","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"KgMiyXH2dg"}],"key":"G9v30WaVAO"},{"type":"paragraph","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"In the following, please enter your DESP username and password. Again, the password will only be saved for the duration of this user session and will be remove as soon as the notebook/kernel is closed.","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"kiL4zmglmI"}],"key":"ZI5kHuAddJ"}],"key":"oq8wnie09B"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from dask_gateway.auth import GatewayAuth\nfrom getpass import getpass\nfrom destinelab import AuthHandler as DESP_AuthHandler\n\nclass DESPAuth(GatewayAuth):\n    def __init__(self, username: str):\n        self.auth_handler = DESP_AuthHandler(username, getpass(\"Please input your DESP password: \"))\n        self.access_token = self.auth_handler.get_token()\n    \n    def pre_request(self, _):\n        headers = {\"Authorization\": \"Bearer \" + self.access_token}\n        return headers, None","key":"UuQgWUHtol"},{"type":"output","id":"s7VpI4erlcWqqyjMJeH2c","data":[],"key":"X66x2kCorH"}],"key":"GraF5aR3ut"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"from rich.prompt import Prompt\nmyAuth = DESPAuth(username=Prompt.ask(prompt=\"Username\"))","visibility":"show","key":"qKojYKIdTo"},{"type":"output","id":"0eegW1MnpFWuA9_arHySQ","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Username: </pre>\n","content_type":"text/html"},"text/plain":{"content":"Username: ","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":" christoph.reimer\nPlease input your DESP password:  ········\n"},{"name":"stdout","output_type":"stream","text":"Response code: 200\n"}],"visibility":"show","key":"A3PB9z0hEs"}],"visibility":"show","key":"taCBJzntgm"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"DestinE Data Lake (DEDL) Stack Client","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JLWnhCXUlA"}],"identifier":"destine-data-lake-dedl-stack-client","label":"DestinE Data Lake (DEDL) Stack Client","html_id":"destine-data-lake-dedl-stack-client","implicit":true,"key":"ZwCKm58Jsw"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PJkmuZFKvP"},{"type":"link","url":"https://github.com/destination-earth/DestinE_EUMETSAT_DEDL_Stack_Client","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"DEDL Stack Client is a Python","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"snoAEUB4QJ"}],"urlSource":"https://github.com/destination-earth/DestinE_EUMETSAT_DEDL_Stack_Client","error":true,"key":"wKc5DwAsaO"},{"type":"text","value":" library to facilitate the use of Stack Service Dask. The main objective is to provide an abstraction layer to interact with the various clusters on each DEDL bridge. Computations can be directed to the different Dask clusters by making use of a context manager as given in the following.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"j7oWhRwPsW"}],"key":"K55VPlO8ri"}],"key":"y6XOvH5evn"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"from dedl_stack_client.dask import DaskMultiCluster\n\nmyDEDLClusters = DaskMultiCluster(auth=myAuth)\nmyDEDLClusters.new_cluster()","visibility":"show","key":"WByzAN0hDE"},{"type":"output","id":"nrY_SOxtT_mFeeqSMzhn1","data":[{"name":"stdout","output_type":"stream","text":"Create new cluster for Central Site\nCreate new cluster for LUMI Bridge\n"}],"visibility":"show","key":"AmZtZinIkE"}],"visibility":"show","key":"QUDh8at39h"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"myDEDLClusters.get_cluster_url()","visibility":"show","key":"VNAoO3eL2L"},{"type":"output","id":"Qufe621mQUvkgajNSMtl2","data":[{"name":"stdout","output_type":"stream","text":"http://dask.central.data.destination-earth.eu/clusters/dask-gateway.203d0155443945c986a35b0488db7ebb/status\nhttp://dask.lumi.data.destination-earth.eu/clusters/dask-gateway.9010455c0c8a44df9a52e15003252889/status\n"}],"visibility":"show","key":"YxWcCis8UV"}],"visibility":"show","key":"xNJFF83IRM"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We can again showcase the execution of standard Python functions on the remote clusters.\nIn the following we will make use of ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UDrltnkAea"},{"type":"inlineCode","value":"dask.futures","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"L04iKQLHqB"},{"type":"text","value":", non-blocking distributed calculations, utilising the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VDpXv64Y6d"},{"type":"inlineCode","value":"map()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tQH7qdfb3z"},{"type":"text","value":" method for task distribution. Detailed information about ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jFUvBQ07dE"},{"type":"inlineCode","value":"dask.futures","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"n2zS84VUeH"},{"type":"text","value":" can be found on the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"d7xMJPSoGh"},{"type":"link","url":"https://docs.dask.org/en/stable/futures.html","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Dask documention","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xN7SfsKOgb"}],"urlSource":"https://docs.dask.org/en/stable/futures.html","key":"BjeVnvhOUY"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vt5g8CO4TN"}],"key":"BD9052mkh3"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"This approach allows for embarrassingly parallel task scheduling, which is very similar to Function as a Service capabilities.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Hy1X0FhA5D"}],"key":"nL8vRV2OQa"},{"type":"image","url":"/build/a3e154464638fb32cf560b6de9c384d8.svg","key":"mwEOr9wrcl","urlSource":"https://docs.dask.org/en/latest/_images/map-reduce-task-scheduling.svg"}],"key":"OcKGjnAXXg"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"from time import sleep as wait\n\ndef apply_myfunc(x):\n    wait(1)\n    return x+1","visibility":"show","key":"czJfmaTuku"},{"type":"output","id":"oaIoBTVrtzwbeqgHklw9G","data":[],"visibility":"show","key":"jBoyskZQ4c"}],"visibility":"show","key":"OonryQmbOz"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We want to run ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fQyFsSXRs1"},{"type":"inlineCode","value":"apply_myfunc()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JNJrLpn58e"},{"type":"text","value":" on ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JGyxbiMWzG"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Central Site","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TBJ5Qg8HCD"}],"key":"NxC9jlrQrk"},{"type":"text","value":" and wait for all results to be ready. ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RFrfE0gnq4"},{"type":"inlineCode","value":"my_filelist_central","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"j2OAi7ZkhT"},{"type":"text","value":" represents a filelist to be processed by ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zEzNOPmbPH"},{"type":"inlineCode","value":"apply_myfunc()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BKPnLMyIWP"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LyfKRcFxj4"}],"key":"A72N8WxV8G"}],"key":"sHG7Booz8y"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"my_filelist_central = range(20)\nwith myDEDLClusters.as_current(location=\"central\") as myclient:\n    central_future = myclient.map(apply_myfunc, my_filelist_central)\n    results_central = myclient.gather(central_future)","visibility":"show","key":"kjSGkWBE7t"},{"type":"output","id":"qElA7VvyjuKbsCdvK7Caw","data":[],"visibility":"show","key":"XHAUg6zaCC"}],"visibility":"show","key":"mIsICY9qwh"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"results_central","visibility":"show","key":"qnw9sJkq8a"},{"type":"output","id":"oBHS8RMEZ1BoSJe0UwY8c","data":[{"output_type":"execute_result","execution_count":24,"metadata":{},"data":{"text/plain":{"content":"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]","content_type":"text/plain"}}}],"visibility":"show","key":"bLLne6PP45"}],"visibility":"show","key":"n6cHgkmmG7"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Run computation at ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LByvFgAH5m"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"LUMI bridge","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EgnGqmmXNS"}],"key":"Ipwh6RUFDq"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ssfTIv7xnT"}],"key":"mGvdMc3iRF"}],"key":"Ads6jQJFLI"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"my_filelist_lumi = range(32)\nwith myDEDLClusters.as_current(location=\"lumi\") as myclient:\n    lumi_future = myclient.map(apply_myfunc, my_filelist_lumi)\n    results_lumi = myclient.gather(lumi_future)","visibility":"show","key":"uZVHMbOeqT"},{"type":"output","id":"UM6dJKfYSVP04VRI496dv","data":[],"visibility":"show","key":"omtFE368hB"}],"visibility":"show","key":"vhzcMgWpU5"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"results_lumi","visibility":"show","key":"cIqwgqImby"},{"type":"output","id":"x_DEnWF5F1dByxg1zOuI9","data":[{"output_type":"execute_result","execution_count":26,"metadata":{},"data":{"text/plain":{"content":"[1,\n 2,\n 3,\n 4,\n 5,\n 6,\n 7,\n 8,\n 9,\n 10,\n 11,\n 12,\n 13,\n 14,\n 15,\n 16,\n 17,\n 18,\n 19,\n 20,\n 21,\n 22,\n 23,\n 24,\n 25,\n 26,\n 27,\n 28,\n 29,\n 30,\n 31,\n 32]","content_type":"text/plain"}}}],"visibility":"show","key":"VTt0jbOg38"}],"visibility":"show","key":"JIC29SRFz7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Limitations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Kc4WHVzddr"}],"identifier":"limitations","label":"Limitations","html_id":"limitations","implicit":true,"key":"Ct82UmGd80"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Python libraries use in the local environment need to match, same version, with those available in the Dask Cluster. If this is not the case, you will get a warning, code might work but not guaranteed.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ebK9RBzBGz"}],"key":"wmZjZyfqXb"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"No direct data exchange between Dask Workers across cloud locations possible. Each location acts as atmoic unit, however data can be easily exchanged via storage services such as S3.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"F6JLrqw3qk"}],"key":"dfHhDMYPQ5"}],"key":"SH57cNKBxX"}],"key":"kVKGLDyv60"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use Case example: Pakistan Flood 2022","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yN4ioVVbF5"}],"identifier":"use-case-example-pakistan-flood-2022","label":"Use Case example: Pakistan Flood 2022","html_id":"use-case-example-pakistan-flood-2022","implicit":true,"key":"CmlpQZGdQp"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The complete use case is available on GitHub via ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"t8GRuBDCIN"},{"type":"link","url":"https://github.com/destination-earth/DestinE_EUMETSAT_PakistanFlood_2022","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"https://​github​.com​/destination​-earth​/DestinE​_EUMETSAT​_PakistanFlood​_2022","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RboJjrzjus"}],"urlSource":"https://github.com/destination-earth/DestinE_EUMETSAT_PakistanFlood_2022","error":true,"key":"yYAhM7ekwM"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BStG8hRc0U"}],"key":"dnUPCcIZjf"}],"key":"q13O62P26s"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The use case demonstrates the multi-cloud capabilities of DEDL following the paradigm of data proximate computing. Data of the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NpMmXHKSfq"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Global Flood Monitoring (GFM)","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kLfNNMNFei"}],"key":"fght4EpYhH"},{"type":"text","value":" service as well as ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"VYb2CYEoUn"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Climate DT outputs, simulated by utilising ERA5 data","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"e9G81RFFL9"}],"key":"BOsEaLx8hF"},{"type":"text","value":" have been use for flood risk assessment.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"XZFyOIUoyq"}],"key":"nAW0YKpPFk"},{"type":"image","url":"/build/fbe7b3a93dbabd237a3b9af41be26621.png","key":"ZGeY5Tu6jc","urlSource":"https://github.com/destination-earth/DestinE_EUMETSAT_PakistanFlood_2022/blob/main/img/DEDL_FloodUC_dataflow.png?raw=true"}],"key":"dn2PIIAG1d"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Data is stored as datacubes (zarr format) at Central Site and at LUMI bridge in object storage.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XOpSMQgjU0"}],"key":"OVXc57KjVE"}],"key":"wU4hIfPH5i"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import s3fs\nimport xarray as xr\n\nxr.set_options(keep_attrs=True)\n\ns3fs_central = s3fs.S3FileSystem(\n    anon=True,\n    use_ssl=True,\n    client_kwargs={\"endpoint_url\": \"https://s3.central.data.destination-earth.eu\"})\n\ns3fs_lumi = s3fs.S3FileSystem(\n    anon=True,\n    use_ssl=True,\n    client_kwargs={\"endpoint_url\": \"https://s3.lumi.data.destination-earth.eu\"})","visibility":"show","key":"qVNYTuyIxK"},{"type":"output","id":"4j50kB-8LwdpsNEZZkhw0","data":[],"visibility":"show","key":"ky9Llff2jB"}],"visibility":"show","key":"QiuE7D1qBB"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can list the data available at Central Site.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XwbyC8vjlQ"}],"key":"L4mmfYU3kU"}],"key":"Tk7kGRqaiQ"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"s3fs_central.ls(\"increment1-testdata\")","visibility":"show","key":"VlXwVAjhwW"},{"type":"output","id":"4M3jhi8Zbfg9vsDzjHnto","data":[{"output_type":"execute_result","execution_count":28,"metadata":{},"data":{"text/plain":{"content":"['increment1-testdata/2022-08-30.zarr', 'increment1-testdata/built_data.zarr']","content_type":"text/plain"}}}],"visibility":"show","key":"PkZWyxkIxE"}],"visibility":"show","key":"OY5IA8Qlwe"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read data stored in S3 bucket at Central Site. The data we want to read is a single Zarr data store representing the GFM flood data over Pakistan for 2022-08-30.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fktEcy3iPq"}],"key":"l2DWCpE5WD"}],"key":"M0m1eryRPo"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"flood_map = xr.open_zarr(store=s3fs.S3Map(root=f\"increment1-testdata/2022-08-30.zarr\", s3=s3fs_central, check=False),\n                         decode_coords=\"all\",)[\"flood\"].assign_attrs(location=\"central\", resolution=20)\n#flood_map","visibility":"show","key":"Y6Utm7YPcI"},{"type":"output","id":"1F2UIqjnU630swU4kGU6T","data":[],"visibility":"show","key":"Ow0g0Hhk9L"}],"visibility":"show","key":"Scg6sQLNfJ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We now want to run simple computation and compute the flooded area for the this day in August 2022.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GL99HUVCYN"}],"key":"mRL1f08DKW"}],"key":"z8mdf4lXJZ"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"flooded_area_ = flood_map.sum()*20*20/1000.\n#flooded_area_","visibility":"show","key":"wGcglvbuOZ"},{"type":"output","id":"Ii23uEObsd5H19l2dChUO","data":[],"visibility":"show","key":"ReclqxoJax"}],"visibility":"show","key":"X5BeaRiMEd"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"So far we haven’t computed anything, so lets do the computation now on the Dask cluster.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fPgZuUheLG"}],"key":"QuAGEjDotR"}],"key":"doC8OuJWRM"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"from rich.console import Console\nfrom rich.prompt import Prompt\nconsole = Console()\n\nflooded_area = myDEDLClusters.compute(flooded_area_, sync=True)\nconsole.print(f\"Flooded area: {flooded_area.data} km2\")","visibility":"show","key":"raZBceJUYR"},{"type":"output","id":"zSJM401AElvVTKk2mZ96a","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Flooded area: <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">18991614.0</span> km2\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"Flooded area: \u001b[1;36m18991614.0\u001b[0m km2\n","content_type":"text/plain"}}}],"visibility":"show","key":"Mv2w19YzVO"}],"visibility":"show","key":"RkqG5KOIOd"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"How was that processing routed to Dask Gateway at Central Site","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iJ6338FgKB"}],"key":"VP6a5xvmtz"},{"type":"text","value":"?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mInT8wde4P"}],"key":"LEnA5GGTPL"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"myDEDLClusters.compute(flooded_area_, sync=True)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"asZFEGuGdT"},{"type":"text","value":" checks for annotations (attributes) of array and maps that to available Dask Clusters.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mTteFjJb5q"}],"key":"jNpSWsNLDI"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Preprocess GFM data at ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"eyWObXSKwI"},{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Central Site","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"LY3tyN9JyY"}],"key":"AnbASDEmo7"},{"type":"text","value":" for visualiation","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"WIouIVzaIm"}],"key":"ZC4vReViRg"}],"key":"yLZ27KCQVy"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"def preprocess_dataset(data_array: xr.DataArray, method: str):\n    data_array = data_array.squeeze()\n    steps = 500 // data_array.attrs[\"resolution\"]\n    coarsened = data_array.coarsen({'y': steps, 'x': steps}, boundary='trim')\n    if method == 'median':\n        data_array = (coarsened.median() > 0).astype('float32')\n    elif method == 'mean':\n        data_array = coarsened.mean()\n    elif method == 'max':\n        data_array = coarsened.max()\n    else:\n        raise NotImplementedError(method)\n    return data_array","visibility":"show","key":"P1cK07QbfZ"},{"type":"output","id":"O4ZfLSWsoUvYpSeUTFkuQ","data":[],"visibility":"show","key":"ybIruPMlsx"}],"visibility":"show","key":"JkuiZhhxvJ"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"flood_prep_ = preprocess_dataset(flood_map, 'median')","visibility":"show","key":"bNNHPioQud"},{"type":"output","id":"BWkK2danR3B06MT-G_8bj","data":[],"visibility":"show","key":"U9hEdrn11D"}],"visibility":"show","key":"hEfO4n7RsK"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nflood_prep = myDEDLClusters.compute(flood_prep_, sync=True)\nflood_prep.rio.write_crs(\"epsg:4326\", inplace=True)\nflood_prep = flood_prep.rio.reproject(f\"EPSG:3857\", nodata=np.nan)","visibility":"show","key":"aaSc9gJcfE"},{"type":"output","id":"Q4Ly1n6tWIbVpHT_sMt6-","data":[],"visibility":"show","key":"GU4j0l1g0G"}],"visibility":"show","key":"CG9gPd4ieB"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualise flood data on map.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EJSFmPM8HW"}],"key":"KfiA59QRzA"}],"key":"EJE61dAmxr"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import leafmap\nfrom attr import dataclass\n\n@dataclass\nclass Extent:\n    min_x: float\n    min_y: float\n    max_x: float\n    max_y: float\n    crs: str\n    def get_center(self):\n        return (np.mean([self.min_y, self.max_y]),\n                np.mean([self.min_x,self.max_x]))\n\n\nroi_extent = Extent(65, 21, 71, 31, crs='EPSG:4326')\n\nm = leafmap.Map(center=roi_extent.get_center(),\n                zoom=8, height=600)\nm.add_raster(flood_prep, colormap=\"Blues\", layer_name=\"Flood\", nodata=0.)\n\nm","visibility":"show","key":"n7dDtIUnNg"},{"type":"output","id":"y9yt29hOJtRqm0yaGeMV-","data":[{"output_type":"execute_result","execution_count":64,"metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"8b9c7249181848be8d4dd6f40304ec7b\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"Map(center=[26.0, 68.0], controls=(ZoomControl(options=['position', 'zoom_in_text', 'zoom_in_title', 'zoom_out…","content_type":"text/plain"}}}],"visibility":"show","key":"kDHG03b6D5"}],"visibility":"show","key":"ZrbtzLeg7Y"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read data stored in S3 bucket at LUMI bridge (Finland). Data we want to read is a datacube generated from ERA-5 representing predicted rainfall data.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XPbjKInJXP"}],"key":"jMODoMK2sZ"}],"key":"ldLXyYPoYp"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"rainfall = xr.open_zarr(store=s3fs.S3Map(root=f\"increment1-testdata/predicted_rainfall.zarr\",\n                                         s3=s3fs_lumi,\n                                         check=False),\n                        decode_coords=\"all\",)[\"tp\"].assign_attrs(location=\"lumi\", resolution=20)","visibility":"show","key":"C8Aj2UW3vE"},{"type":"output","id":"gdMaInqfRNxZ3EoxQUhZ3","data":[],"visibility":"show","key":"wc2eXVBQVp"}],"visibility":"show","key":"E6pPVR4rkW"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"And again run the computation close to the data, therefore at ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"taSwTR41kH"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"LUMI bridge","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"biMj0FI0Gt"}],"key":"GlwuZ8a44q"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PzXpHT1ky2"}],"key":"s6MUmqaDIe"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"First we compute the accumulated rainfall over Pakistan.\nSecondly we compute the average rainfall for August 2022 (monthly mean) at global scale.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LhSLmhNdFW"}],"key":"SxGcieDSAX"}],"key":"Tk5wz2Zj7J"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"from datetime import datetime\n\ndef accum_rain_predictions(rain_data, startdate, enddate, extent):\n    rain_ = rain_data.sel(time=slice(startdate, enddate),\n                          latitude=slice(extent.max_y, extent.min_y),\n                          longitude=slice(extent.min_x, extent.max_x))\n    return rain_.cumsum(dim=\"time\", keep_attrs=True)*1000\n\n# compute accumulated rainfall over Pakistan\nacc_rain_ = accum_rain_predictions(rainfall, startdate=datetime(2022, 8, 18),\n                                                  enddate=datetime(2022, 8, 30),\n                                                  extent=roi_extent)\nacc_rain_ = acc_rain_.rename({\"longitude\":\"x\", \"latitude\":\"y\"})","visibility":"show","key":"Yqi2IZSMtn"},{"type":"output","id":"gqWfYD3Zp0ItkahvewHpd","data":[],"visibility":"show","key":"mIIh65OHqC"}],"visibility":"show","key":"eTD4Egj6KS"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"acc_rain = myDEDLClusters.compute(acc_rain_, sync=True)","visibility":"show","key":"xSHpKcYk1G"},{"type":"output","id":"CG5ks2cEF7xg_EuXEYcJ7","data":[],"visibility":"show","key":"RtfvwD0nJM"}],"visibility":"show","key":"MXXxBRzjQF"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"def acc_rain_reproject(rain):\n    from rasterio.enums import Resampling\n    rain.rio.write_nodata(0, inplace=True)\n    rain.rio.write_crs('EPSG:4326', inplace=True)\n    return rain.rio.reproject('EPSG:3857', resolution=500, resampling=Resampling.bilinear)\n\nacc_rain = acc_rain_reproject(acc_rain)","visibility":"show","key":"T5LSvhoROQ"},{"type":"output","id":"n3_Iwqz_knulmw8S9LGBK","data":[],"visibility":"show","key":"oTfPXERrtF"}],"visibility":"show","key":"V6Xzb5ExPP"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualise forecast data provided by the Digital Twin which could have been used for flood risk assessment or even alerting.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VaRpDVXXck"}],"key":"Ki64NWqKpi"}],"key":"pqVhYneZI6"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"time_dim_len = acc_rain.shape[0]\nfor day in range(0, time_dim_len):\n    fpath_str = f\"./{day}.tif\"\n    acc_rain[day,:].rio.to_raster(fpath_str,\n                                  driver=\"COG\",\n                                  overview_count=10)","visibility":"show","key":"WD0qbvkfvE"},{"type":"output","id":"jaSbzTRGNf8uHOs2nE-uc","data":[],"visibility":"show","key":"KuE86uIR3l"}],"visibility":"show","key":"lCxK7fqCFD"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import leafmap\nfrom localtileserver import get_leaflet_tile_layer\n\nm = leafmap.Map(center=roi_extent.get_center(),\n                zoom=6, height=600)\n\nlayer_dict = {}\ndate_vals = np.datetime_as_string(acc_rain[\"time\"].values, unit='D')\nfor day in range(0, time_dim_len):\n    layer_dict[date_vals[day]]= get_leaflet_tile_layer(f\"./{day}.tif\",\n                                                       colormap=\"Blues\",\n                                                       indexes=[1],\n                                                       nodata=0.,\n                                                       vmin=acc_rain.min().values,\n                                                       vmax=acc_rain.max().values,\n                                                       opacity=0.85)\n\nm.add_local_tile(flood_prep,\n                 colormap=\"Blues\",\n                 nodata=0.)\nm.add_time_slider(layer_dict,\n                  layer=\"Accumluated Rainfall\",\n                  time_interval=1.)\nm","visibility":"show","key":"Tym5z5NEv0"},{"type":"output","id":"Dx6IKUVX4t6DIAwpm6IXx","data":[],"visibility":"show","key":"tEqha3mMC4"}],"visibility":"show","key":"JpMVBxpFd5"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"myDEDLClusters.shutdown()","visibility":"show","key":"o1ByQdlgOS"},{"type":"output","id":"BDCL7SD57Z6wGwcQZelFS","data":[],"visibility":"show","key":"Q2T92bBrhl"}],"visibility":"show","key":"gLa469qKor"}],"key":"Gas8bPjw5S"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"STACK Gallery","url":"/gallery-2","group":"STACK"},"next":{"title":"STACK service - Dask 101","url":"/stack-dask-101","group":"STACK"}}},"domain":"http://localhost:3001"}