{"version":2,"kind":"Notebook","sha256":"d3572f1c942c9003d17232057ce7ea0de7970a4acfd8f63ac05e63a133d9ceea","slug":"tutorial","location":"/HOOK/Tutorial.ipynb","dependencies":[],"frontmatter":{"title":"DEDL - Hook Tutorial - Data Harvest (data-harvest)","content_includes_title":true,"kernelspec":{"name":"python3","display_name":".venv","language":"python"},"numbering":{"title":{"offset":2}},"thumbnail":"/build/b27bd30f978ddf0848f3ea0942070886.jpeg","exports":[{"format":"ipynb","filename":"Tutorial.ipynb","url":"/build/Tutorial-27d83cf9d82845999009341a6f8ce0d4.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"image","url":"/build/b27bd30f978ddf0848f3ea0942070886.jpeg","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"b4lnZGw5M0","urlSource":"https://github.com/destination-earth/DestinE-DataLake-Lab/blob/main/img/DestinE-banner.jpg?raw=true"}],"visibility":"show","key":"HbKBQKjJsk"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Author","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fPNEQT1Kgv"}],"key":"DEUYUzhxuF"},{"type":"text","value":": EUMETSAT ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DsSmXgmcVc"},{"type":"break","key":"cA9iPhWX9x"},{"type":"text","value":"\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yxRTb6YkfV"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Copyright","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JmZLdm1im7"}],"key":"BoOHQLUVNS"},{"type":"text","value":": 2024 EUMETSAT ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NDjeOn7y2C"},{"type":"break","key":"rzduZ5otD3"},{"type":"text","value":"\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YsG03K9LtV"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Licence","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tSSIEmjEkq"}],"key":"axhWypRC3Q"},{"type":"text","value":": MIT ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"p9XHyAHQlC"},{"type":"break","key":"MTgijqnLkw"}],"key":"qEGCGLxbyW"},{"type":"heading","depth":1,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"DEDL - Hook Tutorial - Data Harvest (data-harvest)","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"N7OuNDnG7V"}],"identifier":"dedl-hook-tutorial-data-harvest-data-harvest","label":"DEDL - Hook Tutorial - Data Harvest (data-harvest)","html_id":"dedl-hook-tutorial-data-harvest-data-harvest","implicit":true,"key":"lI6CIArHgy"}],"key":"yBr0GRz8ge"},{"type":"block","kind":"notebook-content","data":{"id":"yvO6LeZHsz2Q"},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This notebook demonstrates how to use the Hook service.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ChQF1PKU6Q"}],"key":"GCopkZvwrB"}],"identifier":"yvo6lezhsz2q","label":"yvO6LeZHsz2Q","html_id":"yvo6lezhsz2q","key":"ebwTvfW6Sj"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Author: EUMETSAT","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"baTTgVD03s"}],"key":"EdQSp4sIbj"}],"visibility":"show","key":"oqODj1v14A"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The detailed API and definition of each endpoint and parameters is available in the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wOx4d7fHBd"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"OnDemand Processing API OData v1","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"c86hoWCXUc"}],"key":"JEjFrYvO8s"},{"type":"text","value":"  OpenAPI documentation found at:\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jzBaOKTuiN"},{"type":"link","url":"https://odp.data.destination-earth.eu/odata/docs","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"https://​odp​.data​.destination​-earth​.eu​/odata​/docs","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"D1ujbuLCo9"}],"urlSource":"https://odp.data.destination-earth.eu/odata/docs","key":"E7MGhnlArZ"}],"key":"b9Iv4huFNW"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Further documentation is available at:\n","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"jeGxcwzWhn"},{"type":"link","url":"https://destine-data-lake-docs.data.destination-earth.eu/en/latest/dedl-big-data-processing-services/Hook-service/Hook-service.html","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"https://​destine​-data​-lake​-docs​.data​.destination​-earth​.eu​/en​/latest​/dedl​-big​-data​-processing​-services​/Hook​-service​/Hook​-service​.html","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"y3YRgdRidP"}],"urlSource":"https://destine-data-lake-docs.data.destination-earth.eu/en/latest/dedl-big-data-processing-services/Hook-service/Hook-service.html","key":"Cp9b5s5pte"}],"key":"dnPeMainmm"}],"visibility":"show","key":"K1TEshWPcw"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Install python package requirements and import environment variables","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YoFsi74xZD"}],"identifier":"install-python-package-requirements-and-import-environment-variables","label":"Install python package requirements and import environment variables","html_id":"install-python-package-requirements-and-import-environment-variables","implicit":true,"key":"GfKzUEXFsY"}],"key":"fhdWqKdABy"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Note: The destinelab python package (which helps with authentication) is available already if you are using Python DEDL kernel\n# Otherwise, the destinelab python package can be installed by uncommenting the following line\n\n# For the importing of environment variables using the load_dotenv(...) command \n%pip install python-dotenv\n# for example code navigating private S3 compatible storage (PRIVATE bucket storage)\n%pip install boto3\n","visibility":"show","key":"vsw0jGULMk"},{"type":"output","id":"HBKScq_fQRIqzZlk4jO5m","data":[],"visibility":"show","key":"i0CvVzeEaW"}],"visibility":"show","key":"TZCR2GPKM0"},{"type":"block","kind":"notebook-code","data":{"id":"oyJN4WaVsz2S","tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport json\nimport requests\nfrom dotenv import load_dotenv\nfrom getpass import getpass\nimport destinelab as destinelab\n\n# Load (optional) notebook specific environment variables from .env_tutorial\nload_dotenv(\"./.env_tutorial\", override=True)","identifier":"oyjn4wavsz2s-code","visibility":"show","enumerator":"1","html_id":"oyjn4wavsz2s-code","key":"EGqgDYA3JG"},{"type":"output","id":"kwZ2OP-C-onx1xdyxg3md","data":[],"identifier":"oyjn4wavsz2s-output","visibility":"show","html_id":"oyjn4wavsz2s-output","key":"n38k61C7TE"}],"identifier":"oyjn4wavsz2s","label":"oyJN4WaVsz2S","html_id":"oyjn4wavsz2s","visibility":"show","key":"QYyqOsIsYF"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Authentification - Get token","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FNifI3h0Oy"}],"identifier":"authentification-get-token","label":"Authentification - Get token","html_id":"authentification-get-token","implicit":true,"key":"CutB9Fw7oh"}],"key":"wNkyL03tQT"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# By default users should use their DESP credentials to get an Access_token\n# This token is added as an Authorisation Header when interacting with the Hook Service API\n\n# Enter DESP credentials.\nDESP_USERNAME = input(\"Please input your DESP username or email: \")\nDESP_PASSWORD = getpass(\"Please input your DESP password: \")\ntoken = destinelab.AuthHandler(DESP_USERNAME, DESP_PASSWORD)\n\naccess_token = token.get_token()\n\n# Check the status of the request\nif access_token is not None:\n    print(\"DEDL/DESP Access Token Obtained Successfully\")\n    # Save API headers\n    api_headers = {\"Authorization\": \"Bearer \" + access_token}\nelse:\n    print(\"Failed to Obtain DEDL/DESP Access Token\")","visibility":"show","key":"lqNr8WWOBs"},{"type":"output","id":"JhEw-qIRiz5N3uhsSpLPk","data":[],"visibility":"show","key":"A1t8i48svQ"}],"visibility":"show","key":"msJyBzWRQW"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Setup static variables","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fssMtrTEXl"}],"identifier":"setup-static-variables","label":"Setup static variables","html_id":"setup-static-variables","implicit":true,"key":"E5TJbxq87P"}],"key":"XFfb5Xp1LJ"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Hook service url (ending with odata/v1/ - e.g. https://odp.data.destination-earth.eu/odata/v1/)\nhook_service_root_url = \"https://odp.data.destination-earth.eu/odata/v1/\"","visibility":"show","key":"DZRcD1Sao1"},{"type":"output","id":"xFca286lKgQi43fkhH9u_","data":[],"visibility":"show","key":"QlLTuNURDH"}],"visibility":"show","key":"tKOAmE2CVH"},{"type":"block","kind":"notebook-content","data":{"id":"OlvgrvV3sz2Y"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"List available workflows","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CP24dctnAD"}],"identifier":"list-available-workflows","label":"List available workflows","html_id":"list-available-workflows","implicit":true,"key":"vB61MEkiEJ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Next we can check what possible workflows are available to us by using method","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nwHgUmobA3"},{"type":"break","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YfHP3rg7sK"},{"type":"inlineCode","value":"https://odp.data.destination-earth.eu/odata/v1/Workflows","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SwDLlj1o1I"}],"key":"P41hSYX3WQ"}],"identifier":"olvgrvv3sz2y","label":"OlvgrvV3sz2Y","html_id":"olvgrvv3sz2y","key":"GLC7nFs2jU"},{"type":"block","kind":"notebook-code","data":{"id":"gSxYUs_0sz2Z","tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Send request and return json object listing all provided workfows, ordered by Id\nresult = requests.get(\n    f\"{hook_service_root_url}Workflows?$orderby=Id asc\", headers=api_headers   \n).json()\n\nprint(\"List of available DEDL provided Hooks\")\nfor i in range(len(result[\"value\"])):\n    print(\n        f\"Name:{str(result['value'][i]['Name']).ljust(20, ' ')}DisplayName:{str(result['value'][i]['DisplayName'])}\"\n    )  # print JSON string","identifier":"gsxyus_0sz2z-code","visibility":"show","enumerator":"2","html_id":"gsxyus-0sz2z-code","key":"Opf1XUngDT"},{"type":"output","id":"Vfw4bDv47AdZcWHXyw0OX","data":[],"identifier":"gsxyus_0sz2z-output","visibility":"show","html_id":"gsxyus-0sz2z-output","key":"hPqYA5IHDV"}],"identifier":"gsxyus_0sz2z","label":"gSxYUs_0sz2Z","html_id":"gsxyus-0sz2z","visibility":"show","key":"S9XCnKDUoU"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Print result JSON object: containing provided workflow list\nworkflow_details = json.dumps(result, indent=4)\nprint(workflow_details)","visibility":"show","key":"vwqkwJv31y"},{"type":"output","id":"n3uz7e2e_N74nD7Q71gJG","data":[],"visibility":"show","key":"n1uFlIiFHl"}],"visibility":"show","key":"QFnqF1mRNj"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Select a workflow and see parameters","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nEkkCgesVy"}],"identifier":"select-a-workflow-and-see-parameters","label":"Select a workflow and see parameters","html_id":"select-a-workflow-and-see-parameters","implicit":true,"key":"Bmugvdlk7z"}],"visibility":"show","key":"qKSPVFRNvy"},{"type":"block","kind":"notebook-content","data":{"id":"jNSqMuRCsz2Z"},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"If we want to see the details of a specific workflow, showing us the parameters that can be set for that workflow, we can add a filter to the query as follows:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JOsqEpLsU8"}],"key":"ZVFZVdoJZv"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"https://odp.data.destination-earth.eu/odata/v1/Workflows?$expand=WorkflowOptions&$filter=(Name eq data-harvest)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Jdu4wnnLPI"}],"key":"pO9ku7cTcb"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"\\","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"eCcFtXjNjl"},{"type":"inlineMath","value":"expand=WorkflowOptions** shows all parameters accepted by workflow   \n**\\\\","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mi>a</mi><mi>n</mi><mi>d</mi><mo>=</mo><mi>W</mi><mi>o</mi><mi>r</mi><mi>k</mi><mi>f</mi><mi>l</mi><mi>o</mi><mi>w</mi><mi>O</mi><mi>p</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi>s</mi><mo>∗</mo><mo>∗</mo><mi>s</mi><mi>h</mi><mi>o</mi><mi>w</mi><mi>s</mi><mi>a</mi><mi>l</mi><mi>l</mi><mi>p</mi><mi>a</mi><mi>r</mi><mi>a</mi><mi>m</mi><mi>e</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>a</mi><mi>c</mi><mi>c</mi><mi>e</mi><mi>p</mi><mi>t</mi><mi>e</mi><mi>d</mi><mi>b</mi><mi>y</mi><mi>w</mi><mi>o</mi><mi>r</mi><mi>k</mi><mi>f</mi><mi>l</mi><mi>o</mi><mi>w</mi><mo>∗</mo><mo>∗</mo><mspace linebreak=\"newline\"></mspace></mrow><annotation encoding=\"application/x-tex\">expand=WorkflowOptions** shows all parameters accepted by workflow   \n**\\\\</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">an</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">or</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">wOpt</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\">∗</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">llp</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">am</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">ers</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">cce</span><span class=\"mord mathnormal\">pt</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">or</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span></span><span class=\"mspace newline\"></span></span></span>","key":"S2WkmWTFti"},{"type":"text","value":"filter=(Name eq data-harvest)","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"puwZ1Qtl0h"}],"key":"HzxqGUfzHp"},{"type":"text","value":" narrows the result to workflow called “data-harvest”","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nkt3hHkJNR"}],"key":"NxoizslgJQ"}],"identifier":"jnsqmurcsz2z","label":"jNSqMuRCsz2Z","html_id":"jnsqmurcsz2z","key":"k2MhWlwiap"},{"type":"block","kind":"notebook-code","data":{"id":"UEvKzPclsz2b","tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Select workflow : defaults to data-harvest\nworkflow = os.getenv(\"HOOK_WORKFLOW\", \"data-harvest\")\nprint(f\"workflow: {workflow}\")\n\n# Send request\nresult = requests.get(\n    f\"{hook_service_root_url}Workflows?$expand=WorkflowOptions&$filter=(Name eq '{workflow}')\",\n    headers=api_headers,\n).json()\nworkflow_details = json.dumps(result, indent=4)\nprint(workflow_details)  # print formatted workflow_details, a JSON string","identifier":"uevkzpclsz2b-code","visibility":"show","enumerator":"3","html_id":"uevkzpclsz2b-code","key":"ASgqbRoE1n"},{"type":"output","id":"MbEWWBdDMh5F5Jjuwyvcj","data":[],"identifier":"uevkzpclsz2b-output","visibility":"show","html_id":"uevkzpclsz2b-output","key":"FgnAVkIIyT"}],"identifier":"uevkzpclsz2b","label":"UEvKzPclsz2b","html_id":"uevkzpclsz2b","visibility":"show","key":"Id853gC687"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Order selected workflow","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jTNpRxrbUa"}],"identifier":"order-selected-workflow","label":"Order selected workflow","html_id":"order-selected-workflow","implicit":true,"key":"Nba3bb2cC9"}],"key":"ivqrstIOmH"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The order selected above will now be configured and executed.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CYeIIr4lC4"}],"key":"hMLCNytWDH"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"e.g. workflow = “data-harvest”.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"urqdHPDTxV"}],"key":"rHZKMNoNo3"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Make an order to ‘harvest data’ using Harmonised Data Access API.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"p0GR24e5BB"}],"key":"AjgidwaDlE"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"i.e. data from an input source can be transferred to a Private bucket or a Temporary storage bucket.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"pv3xk7rKQI"}],"key":"e0LPJwoVeL"}],"key":"CxsnHxCyPW"}],"key":"vcAi0FIT36"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Name your order","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AbVMdA1InE"}],"identifier":"name-your-order","label":"Name your order","html_id":"name-your-order","implicit":true,"key":"NQSNI0tq5C"}],"visibility":"show","key":"fImOtEJEOV"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Here we set the variable order_name, this will allow us to:\n# Easily identify the running process (e.g. when checking the status)\n# order_name is added as a suffix to the order 'Name'\norder_name = os.getenv(\"HOOK_ORDER_NAME\") or input(\"Name your order: \")\nprint(f\"order_name:{order_name}\")","visibility":"show","key":"GFYBFDDHuo"},{"type":"output","id":"SqY9Ihja9muCCMu-JkOCR","data":[],"visibility":"show","key":"IXus9VElDA"}],"visibility":"show","key":"dH5G5aXkUo"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define output storage","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QOSNH7r7MN"}],"identifier":"define-output-storage","label":"Define output storage","html_id":"define-output-storage","implicit":true,"key":"pmqkqN974m"}],"key":"qznNINrpBI"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In workflow parameters, among others values, storage to retreive the result has to be provided.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HYkapJEaDl"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dG6tqMWpNf"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Two possibilites:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dfWi339pKS"}],"key":"Mp3mwYA9A3"}],"key":"uKKO44Ye6Z"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Use your user storage","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XFDtnzvZHZ"}],"key":"h6mcO7vdk1"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Use a temporary storage","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"BzcA7Ak6vW"}],"key":"M4qDp9Jbbu"}],"key":"yedV9x7hq9"}],"key":"fPHGQ5IrND"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"1. - Your user storage (provided by DEDL ISLET service)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ugu9ZuR7Hr"}],"identifier":"id-1-your-user-storage-provided-by-dedl-islet-service","label":"1. - Your user storage (provided by DEDL ISLET service)","html_id":"id-1-your-user-storage-provided-by-dedl-islet-service","implicit":true,"key":"M52LElMs8J"}],"visibility":"show","key":"gmHR2FyvhO"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example using a S3 bucket created with ISLET Storage service  - result will be available in this bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NzQH0icwgy"}],"key":"HKPy3YSw7G"},{"type":"blockquote","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"workflow parameter: {“Name”: “output_storage”, “Value”: “PRIVATE”}","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"uRy5ek4PVP"}],"key":"iiAPSNLwep"}],"key":"dqlWbicyB1"}],"key":"LKtqFpLdnw"}],"key":"kmaF9irt9y"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Output storage - Islet service\n\n# Note: If you want the output to go to your own PRIVATE bucket rather than TEMPORARY storage (expires after 2 weeks),\n#       i) This Configuration will need to be updated with your output_bucket, output_storage_access_key, output_secret_key, output_prefix\n#       ii) You will need to change the output_storage in the order to PRIVATE and add the necessary source_ parameters (see workflow options and commented example)\n\n# URL of the S3 endpoint in the Central Site (or lumi etc.)\noutput_storage_url = \"https://s3.central.data.destination-earth.eu\"\n# output_storage_url = \"https://s3.lumi.data.destination-earth.eu\"\n\n# Name of the object storage bucket where the results will be stored.\noutput_bucket = os.getenv(\"HOOK_OUTPUT_BUCKET\", \"your-bucket-name\")\nprint(f\"output_bucket            : {output_bucket}\")\n\n# Islet object storage credentials (openstack ec2 credentials)\noutput_storage_access_key = os.getenv(\"HOOK_OUTPUT_STORAGE_ACCESS_KEY\", \"your-access-key\")\noutput_storage_secret_key = os.getenv(\"HOOK_OUTPUT_STORAGE_SECRET_KEY\", \"your-secret-key\")\nprint(f\"output_storage_access_key: {output_storage_access_key}\")\nprint(f\"output_storage_secret_key: {output_storage_secret_key}\")\n\n\n# This is the name of the folder in your output_bucket where the output of the hook will be stored.\n# Here we concatenate 'dedl' with the 'workflow' and 'order_name'\noutput_prefix = f\"dedl-{workflow}-{order_name}\"\nprint(f\"output_prefix            : {output_prefix}\")","visibility":"show","key":"p0KWgyQYsa"},{"type":"output","id":"cAVBH5e9UIYQEO3RxaIiO","data":[],"visibility":"show","key":"xL50Hj36cx"}],"visibility":"show","key":"PyWkslLDnE"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"2 - Use temporary storage","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HfCAoU1VFH"}],"identifier":"id-2-use-temporary-storage","label":"2 - Use temporary storage","html_id":"id-2-use-temporary-storage","implicit":true,"key":"ZN8nsCQJen"}],"key":"UMo1VPxvGp"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The result of processing will be stored in shared storage and download link provided in the output product details","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WhFXdOHMsf"}],"key":"zInvjkcbdB"},{"type":"blockquote","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"workflow parameter: {“Name”: “output_storage”, “Value”: “TEMPORARY”}","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"XH0ae24HNz"}],"key":"PLs7bHdK24"}],"key":"CWpz6AUBgc"}],"key":"UbDYUQ01Eo"}],"key":"S9ElcSI6Dp"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define parameters and send order","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KOu0BUjVZ8"}],"identifier":"define-parameters-and-send-order","label":"Define parameters and send order","html_id":"define-parameters-and-send-order","implicit":true,"key":"Kj5nbUse0M"}],"key":"RFrwnGQFIC"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# URL of the STAC server where your collection/item can be downloaded\nstac_hda_api_url = \"https://hda.data.destination-earth.eu/stac\"\n\n# Note: The data (collection_id and data_id) will have been previously discovered and searched for\n\n# Set collection where the item can be found : defaults to example for data-harvest\ncollection_id = os.getenv(\"HOOK_COLLECTION_ID\", \"EO.ESA.DAT.SENTINEL-2.MSI.L1C\")\nprint(f\"STAC collection url: {stac_hda_api_url}/collections/{collection_id}\")\n\n# Set the Item to Retrieve : defaults to example for data-harvest. If Multiple Values, provide comma separated list\ndata_id = os.getenv(\"HOOK_DATA_ID\", \"S2A_MSIL1C_20230910T050701_N0509_R019_T47VLH_20230910T074321.SAFE\")\nprint(f\"data_id: {data_id}\")\nidentifier_list = [data_id_element.strip() for data_id_element in data_id.split(',')]\n\n# Get boolean value from String, default (False)\nis_private_storage = os.getenv(\"HOOK_IS_PRIVATE_STORAGE\", \"False\") == \"True\"\nprint(f\"is_private_storage: {is_private_storage}\")\n\n# we use source_type to add DESP or EXTERNAL specific configuration\nsource_type = os.getenv(\"HOOK_SOURCE_TYPE\", \"DESP\")\nprint(f\"source_type: {source_type}\")\n\nif source_type == \"EXTERNAL\":\n    EXTERNAL_USERNAME = os.getenv(\"HOOK_EXTERNAL_USERNAME\", \"EXTERNAL_USERNAME\")\n    EXTERNAL_PASSWORD = os.getenv(\"HOOK_EXTERNAL_PASSWORD\", \"EXTERNAL_PASSWORD\")\n    EXTERNAL_TOKEN_URL = os.getenv(\"HOOK_EXTERNAL_TOKEN_URL\", \"EXTERNAL_TOKEN_URL\")\n    EXTERNAL_CLIENT_ID = os.getenv(\"HOOK_EXTERNAL_CLIENT_ID\", \"EXTERNAL_CLIENT_ID\")","visibility":"show","key":"f9VEBIxuUz"},{"type":"output","id":"VYXv4xYR2O20HYGuc0PvQ","data":[],"visibility":"show","key":"kpeS9Qy42N"}],"visibility":"show","key":"v1Hc5gAWao"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"########## BUILD ORDER BODY : CHOOSE PRIVATE or TEMPORARY output_storage ##########\n\n# Initialise the order_body\norder_body_custom_bucket = {\n    \"Name\": \"Tutorial \" + workflow + \" - \" + order_name,\n    \"WorkflowName\": workflow,\n    \"IdentifierList\": identifier_list,\n    \"WorkflowOptions\": [],\n}\n\n\n##### Configure PRIVATE OR TEMPORARY STORAGE #####\nif is_private_storage:\n\n    print(\"##### Preparing Order Body for PRIVATE STORAGE #####\")\n    order_body_custom_bucket[\"WorkflowOptions\"].extend(\n        [\n            {\"Name\": \"output_storage\", \"Value\": \"PRIVATE\"},\n            {\"Name\": \"output_s3_access_key\", \"Value\": output_storage_access_key},\n            {\"Name\": \"output_s3_secret_key\", \"Value\": output_storage_secret_key},\n            {\"Name\": \"output_s3_path\", \"Value\": f\"s3://{output_bucket}/{output_prefix}\"},\n            {\"Name\": \"output_s3_endpoint_url\", \"Value\": output_storage_url}\n        ]\n    )\n\nelse:\n\n    print(\"##### Preparing Order Body for TEMPORARY STORAGE #####\")\n    order_body_custom_bucket[\"WorkflowOptions\"].extend(\n        [\n            {\"Name\": \"output_storage\", \"Value\": \"TEMPORARY\"},\n        ]\n    )\n\n##### Configure SOURCE_TYPE and associated parameters #####\nif source_type == \"DESP\":\n\n    # Using DESP credentials is standard way of executing Hooks.\n    print(\"##### Preparing Order Body for access to DEDL HDA using DESP Credentials #####\")\n    order_body_custom_bucket[\"WorkflowOptions\"].extend(\n        [\n            {\"Name\": \"source_type\", \"Value\": \"DESP\"},\n            {\"Name\": \"desp_source_username\", \"Value\": DESP_USERNAME},\n            {\"Name\": \"desp_source_password\", \"Value\": DESP_PASSWORD},\n            {\"Name\": \"desp_source_collection\", \"Value\": collection_id}\n        ]\n    )\n\nelif source_type == \"EXTERNAL\":\n\n    # Build your order body : Example using EXTERNAL source type and source_catalogue_api_type STAC.\n    # This would allow you to access products directly from a configured STAC server\n    # Here we show an example configuration of a STAC server with OIDC security, that could be adapted to your needs (change urls, etc)\n    # This is shown for example purposes only. The standard way of configuring is with DESP source_type seen above.\n    print(\"##### Preparing Order Body for access to EXTERNAL STAC Server using EXTERNAL Credentials #####\")\n    order_body_custom_bucket[\"WorkflowOptions\"].extend(\n        [\n            {\"Name\": \"source_type\", \"Value\": \"EXTERNAL\"},\n            {\"Name\": \"source_catalogue_api_url\", \"Value\": stac_hda_api_url},\n            {\"Name\": \"source_catalogue_api_type\", \"Value\": \"STAC\"},\n            {\"Name\": \"source_token_url\", \"Value\": EXTERNAL_TOKEN_URL},\n            {\"Name\": \"source_grant_type\", \"Value\": \"PASSWORD\"},\n            {\"Name\": \"source_auth_header_name\", \"Value\": \"Authorization\"},\n            {\"Name\": \"source_username\", \"Value\": EXTERNAL_USERNAME},\n            {\"Name\": \"source_password\", \"Value\": EXTERNAL_PASSWORD},\n            {\"Name\": \"source_client_id\", \"Value\": EXTERNAL_CLIENT_ID},\n            {\"Name\": \"source_client_secret\", \"Value\": \"\"},\n            {\"Name\": \"source_catalogue_collection\", \"Value\": collection_id}\n        ]\n    )\n\nelse:\n\n    print(\"source_type not equal to DESP or EXTERNAL\")\n\n\n\n########## ADDITIONAL OPTIONS ##########\n\nadditional_options = []\n\n# Checks environment variables for the form HOOK_ADDITIONAL1=\"NAME=12345;VALUE=abcdef\"\nfor env_key, env_value in os.environ.items():\n    if env_key.startswith('HOOK_ADDITIONAL'):\n        #print(f\"{env_key}: {env_value}\")        \n        parts = env_value.split(';')\n        # Extract the name and value\n        name = parts[0].split('=')[1]\n        value = parts[1].split('=')[1]\n        value_type = parts[2].split('=')[1]\n        additional_options.append({\"Name\": name, \"Value\": value if value_type == 'str' else int(value)})\n\nprint(f\"addditional_options:{additional_options}\")\n\nif additional_options:\n    print(\"Adding additional_options\")\n    order_body_custom_bucket[\"WorkflowOptions\"].extend(additional_options)\n\n########## BUILD ORDER BODY : END ##########\n\n# Uncomment this to see the final order body\n# print(json.dumps(order_body_custom_bucket, indent=4))\n\n\n# Send order\norder_request = requests.post(\n    hook_service_root_url + \"BatchOrder/OData.CSC.Order\",\n    json.dumps(order_body_custom_bucket),\n    headers=api_headers,\n).json()\n\n# If code = 201, the order has been successfully sent\n\n# Print order_request JSON object: containing order_request details\norder_reques_details = json.dumps(order_request, indent=4)\nprint(order_reques_details)\n\norder_id = order_request['value']['Id']\nprint(f\"order 'Id' from order_request: {order_id}\")\n","visibility":"show","key":"OJJuTGLy3R"},{"type":"output","id":"y6hiF8rKjN1qptks2jXBA","data":[],"visibility":"show","key":"GLkrH6jsxr"}],"visibility":"show","key":"aRpgSo2F9s"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"It is possible to order multiple product using endpoint:\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xgZ6D3sgJh"},{"type":"inlineCode","value":"https://odp.data.destination-earth.eu/odata/v1/BatchOrder/OData.CSC.Order","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ynjc6fdsNS"}],"key":"WiKigvkzUW"}],"key":"F5Fv61pW71"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Check The status of the order","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xtLs9vn6r1"}],"identifier":"check-the-status-of-the-order","label":"Check The status of the order","html_id":"check-the-status-of-the-order","implicit":true,"key":"DAkAgy3l80"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Possible status values","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cMYKKXeXNE"}],"key":"p1cHEA8Fdl"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"queued (i.e. queued for treatment but not started)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"rber7LWVdB"}],"key":"b56WEPWVRd"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"in_progress (i.e. order being treated)","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"I04p39tawE"}],"key":"jgqH2SmkpH"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"completed (i.e. order is complete and data ready)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"JAWaDSYlUv"}],"key":"yfBDqp8Lk5"}],"key":"JeedV22lZE"}],"key":"FabrpV1GlF"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"\n# ProductionOrders endpoint gives status of orders (only with one item attached)\n# Otherwise use BatchOrder(XXXX)/Products endpoint to get status of individual items associated with order\nif len(identifier_list) == 1:\n    order_status_url = f\"{hook_service_root_url}ProductionOrders\"\n    params = {\"$filter\": f\"id eq {order_id}\"}\n    order_status_response = requests.get(order_status_url, params=params, headers=api_headers).json()\n    print(json.dumps(order_status_response, indent=4))\n\n# Get Status of all items of an order in this way\norder_status_response = requests.get(\n    f\"{hook_service_root_url}BatchOrder({order_id})/Products\",\n    headers=api_headers,\n).json()\nprint(json.dumps(order_status_response, indent=4))\n","visibility":"show","key":"qwCAf8IaQn"},{"type":"output","id":"EP-T6pEObn-7doEvepvsX","data":[],"visibility":"show","key":"urPP5T13mf"}],"visibility":"show","key":"NXLODThd18"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access workflow output","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IGtVRD1Zr2"}],"identifier":"access-workflow-output","label":"Access workflow output","html_id":"access-workflow-output","implicit":true,"key":"g4PVCoXrRP"}],"visibility":"show","key":"GG18CRAHP7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Private storage","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CR3UkECKIo"}],"identifier":"private-storage","label":"Private storage","html_id":"private-storage","implicit":true,"key":"Q9KlCHN3AC"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let us now check our private storage using this boto3 script.\nYou can also go and check this in the Islet service using the Horizon user interface","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Urm5nWojMj"}],"key":"kKSxCK8kKl"}],"key":"rs2pwoYQmL"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# PRIVATE STORAGE: Prints contents of Private Bucket\nimport boto3\n\nif is_private_storage:\n\n    s3 = boto3.client(\n        \"s3\",\n        aws_access_key_id=output_storage_access_key,\n        aws_secret_access_key=output_storage_secret_key,\n        endpoint_url=output_storage_url,\n    )\n\n    paginator = s3.get_paginator(\"list_objects_v2\")\n    pages = paginator.paginate(Bucket=output_bucket, Prefix=output_prefix + \"/\")\n\n    for page in pages:\n        try:\n            for obj in page[\"Contents\"]:\n                print(obj[\"Key\"])\n        except KeyError:\n            print(\"No files exist\")\n            exit(1)","visibility":"show","key":"BuFm0cZaEl"},{"type":"output","id":"kQ6g6JHirzB-Frr-GEbCZ","data":[],"visibility":"show","key":"QBtAmTpeoC"}],"visibility":"show","key":"FbSMqL8T7R"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Temporary storage","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vYwWpNMnzi"}],"identifier":"temporary-storage","label":"Temporary storage","html_id":"temporary-storage","implicit":true,"key":"AHQIRGuYnb"}],"key":"mU6U4Uk5i8"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# List order items within a production order\n# When the output_storage is of type TEMPORARY we can get a DownloadLink from the following code (Can also optionally download items here in code with the flag is_download_products)\n\n# If TEMPORARY storage\nif not is_private_storage:\n\n    # Set to True to download products at the same level as the notebook file. File name will be in format \"output-{workflow}-{order_id}-{product_id}.zip\"\n    is_download_products = False\n\n    # Get Status of all items of an order in this way\n    product_status_response = requests.get(\n        f\"{hook_service_root_url}BatchOrder({order_id})/Products\",\n        headers=api_headers,\n    ).json()\n    print(json.dumps(product_status_response, indent=4))\n\n    if is_download_products:\n\n        is_all_products_completed = True\n        # We only attempt to download products when each of the items is in complete status.\n        for i in range(len(product_status_response[\"value\"])):\n\n            product_id = product_status_response[\"value\"][i][\"Id\"]\n            product_status = product_status_response[\"value\"][i][\"Status\"]\n\n            if product_status != \"completed\":\n                is_all_products_completed = False\n\n        # Can download if all products completed\n        if is_all_products_completed:\n\n            for i in range(len(product_status_response[\"value\"])):\n\n                product_id = product_status_response[\"value\"][i][\"Id\"]\n                product_status = product_status_response[\"value\"][i][\"Status\"]\n\n                # Infer the url of the product\n                url_product = f\"{hook_service_root_url}BatchOrder({order_id})/Product({product_id})/$value\"\n                print(f\"url_product: {url_product}\")\n                # Download the product\n                r = requests.get(\n                    url_product, headers=api_headers, allow_redirects=True\n                )\n                product_file_name = f\"output-{workflow}-{order_id}-{product_id}.zip\"\n                open(product_file_name, \"wb\").write(r.content)\n                print(f\"Download Complete: product_file_name: {product_file_name}\")\n\n        else:\n            print(f\"Status for order:{order_id} - At least one of the products does not have the status of 'completed'.\")\n","visibility":"show","key":"GDUqO43j0h"},{"type":"output","id":"V5NRNpZe1kzw_FS-IUp42","data":[],"visibility":"show","key":"Wp5AIHk8np"}],"visibility":"show","key":"aWq25kWBQC"}],"key":"KovMXlV4dI"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"HOOK Gallery","url":"/gallery-1","group":"HOOK"},"next":{"title":"Access to Hook services","url":"/dedl-hook-access","group":"HOOK"}}},"domain":"http://localhost:3001"}